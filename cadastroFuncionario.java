package com.mycompany.cadastrofuncionarios_maven_victor;

import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author VEMF
 */
public class cadastroFuncionario extends javax.swing.JFrame {
    
    Listar listaCadastro = new Listar();
    
    //criacao do metodo que mostra funcionario privado
    public void mostrarTableFuncionarioPrivado(){
        //criação da interface pra tabela
        DefaultTableModel list_fp = new DefaultTableModel(new Object[] {
            "Nome",
            "Sobrenome",
            "Código",
            "Cpf",
            "Setor",
            "Concedente",
            "TempoContrato",
            "Area",
        }, 0);
        int i;
        //varrendo a lista de fp
        for(i = 0; i < listaCadastro.totalFuncionarioPrivado(); ++i){
            list_fp.addRow(new Object[] {
                listaCadastro.ListFuncionarioPrivado.get(i).getNome(),
                listaCadastro.ListFuncionarioPrivado.get(i).getSobrenome(),
                listaCadastro.ListFuncionarioPrivado.get(i).getCode(),
                listaCadastro.ListFuncionarioPrivado.get(i).getCpf(),
                listaCadastro.ListFuncionarioPrivado.get(i).getSetor(),
                listaCadastro.ListFuncionarioPrivado.get(i).getConcedente(),
                listaCadastro.ListFuncionarioPrivado.get(i).getTempoContrato(),
                listaCadastro.ListFuncionarioPrivado.get(i).getArea()
            });
        }
        table_privado.setModel(list_fp);
    }
    //criacao do metodo que mostra funcionario publico
    public void mostrarTableFuncionarioPublico(){
        //criação da interface pra tabela
        DefaultTableModel list_fpu = new DefaultTableModel(new Object[] {
            "Nome",
            "Sobrenome",
            "Código",
            "Cpf",
            "Setor",
            "Siape",
            "AnoAdmissao",
            "Departamento",
        }, 0);
        int i;
        //varrendo a lista de fpu
        for(i = 0; i < listaCadastro.totalFuncionarioPublico(); ++i){
            list_fpu.addRow(new Object[] {
                listaCadastro.ListFuncionarioPublico.get(i).getNome(),
                listaCadastro.ListFuncionarioPublico.get(i).getSobrenome(),
                listaCadastro.ListFuncionarioPublico.get(i).getCode(),
                listaCadastro.ListFuncionarioPublico.get(i).getCpf(),
                listaCadastro.ListFuncionarioPublico.get(i).getSetor(),
                listaCadastro.ListFuncionarioPublico.get(i).getSiape(),
                listaCadastro.ListFuncionarioPublico.get(i).getAnoAdmissao(),
                listaCadastro.ListFuncionarioPublico.get(i).getDepartamento()
            });
        }
        table_publico.setModel(list_fpu);
    }    
    //criacao do metodo que mostra todos funcionarios
    public void mostrarTableFuncionarios(){
        DefaultTableModel list_f = new DefaultTableModel(new Object[] {
            "Nome",
            "Sobrenome",
            "Código",
            "Cpf",
            "Setor",
            "Quadro",
        }, 0);
        int i;
        for(i = 0; i < listaCadastro.totalFuncionarioPrivado(); ++i){
            list_f.addRow(new Object[] {
                listaCadastro.ListFuncionarioPrivado.get(i).getNome(),
                listaCadastro.ListFuncionarioPrivado.get(i).getSobrenome(),
                listaCadastro.ListFuncionarioPrivado.get(i).getCode(),
                listaCadastro.ListFuncionarioPrivado.get(i).getCpf(),
                listaCadastro.ListFuncionarioPrivado.get(i).getSetor(),
                "Privado"
            });    
        table_funcionarios.setModel(list_f);            
        }
        for(i = 0; i < listaCadastro.totalFuncionarioPublico(); ++i){
            list_f.addRow(new Object[] {
                listaCadastro.ListFuncionarioPublico.get(i).getNome(),
                listaCadastro.ListFuncionarioPublico.get(i).getSobrenome(),
                listaCadastro.ListFuncionarioPublico.get(i).getCode(),
                listaCadastro.ListFuncionarioPublico.get(i).getCpf(),
                listaCadastro.ListFuncionarioPublico.get(i).getSetor(),
                "Público"
            });
            table_funcionarios.setModel(list_f);
        }
    }

    /**
     * Creates new form cadastroFuncionario
     */
    public cadastroFuncionario() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        painel_cadastrar = new javax.swing.JPanel();
        lbl_nome = new javax.swing.JLabel();
        lbl_setor = new javax.swing.JLabel();
        lbl_cpf = new javax.swing.JLabel();
        txt_setor = new javax.swing.JTextField();
        txt_cpf = new javax.swing.JTextField();
        txt_nome = new javax.swing.JTextField();
        lbl_sobrenome = new javax.swing.JLabel();
        txt_sobrenome = new javax.swing.JTextField();
        lbl_siape = new javax.swing.JLabel();
        lbl_admissao = new javax.swing.JLabel();
        lbl_departamento = new javax.swing.JLabel();
        txt_siape = new javax.swing.JTextField();
        txt_admissao = new javax.swing.JTextField();
        txt_departamento = new javax.swing.JTextField();
        lbl_concedente = new javax.swing.JLabel();
        lbl_tempocontrato = new javax.swing.JLabel();
        lbl_area = new javax.swing.JLabel();
        txt_concedente = new javax.swing.JTextField();
        txt_tempocontrato = new javax.swing.JTextField();
        txt_area = new javax.swing.JTextField();
        btn_cadastrar = new javax.swing.JButton();
        btn_cancelar = new javax.swing.JButton();
        lbl_nascimento = new javax.swing.JLabel();
        txt_nascimento = new javax.swing.JTextField();
        radioBtn_quadroPublico = new javax.swing.JRadioButton();
        radioBtn_quadroPrivado = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        painel_func_privado = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_privado = new javax.swing.JTable();
        lbl_buscar_fp = new javax.swing.JLabel();
        txt_buscar_fp = new javax.swing.JTextField();
        btn_buscar_fp = new javax.swing.JButton();
        btn_apagar_fp = new javax.swing.JButton();
        painel_func_publico = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_publico = new javax.swing.JTable();
        lbl_buscar_fpu = new javax.swing.JLabel();
        txt_buscar_fpu = new javax.swing.JTextField();
        btn_buscar_fpu = new javax.swing.JButton();
        btn_apagar_fpu = new javax.swing.JButton();
        painel_funcionarios = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        table_funcionarios = new javax.swing.JTable();
        btn_buscar_f = new javax.swing.JButton();
        txt_buscar_f = new javax.swing.JTextField();
        btn_apagar_f = new javax.swing.JButton();
        lbl_buscar_f = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 600));

        jTabbedPane1.setMaximumSize(new java.awt.Dimension(800, 600));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(800, 600));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(800, 600));

        painel_cadastrar.setMinimumSize(new java.awt.Dimension(800, 600));
        painel_cadastrar.setPreferredSize(new java.awt.Dimension(800, 600));

        lbl_nome.setText("Nome:");

        lbl_setor.setText("Setor");

        lbl_cpf.setText("Cpf:");

        txt_setor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_setorActionPerformed(evt);
            }
        });

        txt_cpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cpfActionPerformed(evt);
            }
        });

        txt_nome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nomeActionPerformed(evt);
            }
        });

        lbl_sobrenome.setText("Sobrenome:");

        txt_sobrenome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_sobrenomeActionPerformed(evt);
            }
        });

        lbl_siape.setText("Siape:");

        lbl_admissao.setText("Ano de Admissão:");

        lbl_departamento.setText("Departamento:");

        txt_siape.setEnabled(false);
        txt_siape.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_siapeActionPerformed(evt);
            }
        });

        txt_admissao.setEnabled(false);

        txt_departamento.setEnabled(false);
        txt_departamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_departamentoActionPerformed(evt);
            }
        });

        lbl_concedente.setText("Concedente:");

        lbl_tempocontrato.setText("Tempo de Contrato:");

        lbl_area.setText("Área de trabalho:");

        txt_concedente.setEnabled(false);
        txt_concedente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_concedenteActionPerformed(evt);
            }
        });

        txt_tempocontrato.setEnabled(false);
        txt_tempocontrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_tempocontratoActionPerformed(evt);
            }
        });

        txt_area.setEnabled(false);

        btn_cadastrar.setText("Cadastrar");
        btn_cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cadastrarActionPerformed(evt);
            }
        });

        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        lbl_nascimento.setText("Código:");

        txt_nascimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nascimentoActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioBtn_quadroPublico);
        radioBtn_quadroPublico.setText("Quadro Público");
        radioBtn_quadroPublico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtn_quadroPublicoActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioBtn_quadroPrivado);
        radioBtn_quadroPrivado.setText("Quadro Privado");
        radioBtn_quadroPrivado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioBtn_quadroPrivadoActionPerformed(evt);
            }
        });

        jLabel1.setText("Ano");

        javax.swing.GroupLayout painel_cadastrarLayout = new javax.swing.GroupLayout(painel_cadastrar);
        painel_cadastrar.setLayout(painel_cadastrarLayout);
        painel_cadastrarLayout.setHorizontalGroup(
            painel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painel_cadastrarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(painel_cadastrarLayout.createSequentialGroup()
                        .addComponent(btn_cadastrar)
                        .addGap(128, 128, 128)
                        .addComponent(btn_cancelar)
                        .addGap(277, 277, 277))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painel_cadastrarLayout.createSequentialGroup()
                        .addGroup(painel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(painel_cadastrarLayout.createSequentialGroup()
                                    .addComponent(lbl_setor, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(21, 21, 21)
                                    .addComponent(txt_setor, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painel_cadastrarLayout.createSequentialGroup()
                                    .addComponent(lbl_nome, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txt_nome, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painel_cadastrarLayout.createSequentialGroup()
                                .addGroup(painel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(painel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(lbl_admissao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lbl_departamento, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(lbl_siape, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(radioBtn_quadroPublico))
                                .addGap(40, 40, 40)
                                .addGroup(painel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txt_departamento, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                                    .addComponent(txt_siape)
                                    .addComponent(txt_admissao))
                                .addGap(112, 112, 112)
                                .addGroup(painel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(radioBtn_quadroPrivado)
                                        .addGroup(painel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(lbl_concedente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lbl_tempocontrato, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE))
                                        .addComponent(lbl_cpf, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lbl_sobrenome))
                                    .addComponent(lbl_area, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(painel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(painel_cadastrarLayout.createSequentialGroup()
                                        .addGap(47, 47, 47)
                                        .addGroup(painel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txt_tempocontrato, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                                            .addComponent(txt_concedente, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txt_area))
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel1))
                                    .addGroup(painel_cadastrarLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(painel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txt_cpf, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                                            .addComponent(txt_sobrenome))))))
                        .addGap(0, 127, Short.MAX_VALUE))))
            .addGroup(painel_cadastrarLayout.createSequentialGroup()
                .addGap(225, 225, 225)
                .addComponent(lbl_nascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_nascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painel_cadastrarLayout.setVerticalGroup(
            painel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_cadastrarLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(painel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_nome)
                    .addComponent(txt_nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_sobrenome)
                    .addComponent(txt_sobrenome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(painel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_setor)
                    .addComponent(txt_setor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_cpf)
                    .addComponent(txt_cpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(painel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_nascimento)
                    .addComponent(txt_nascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioBtn_quadroPublico)
                    .addComponent(radioBtn_quadroPrivado))
                .addGroup(painel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painel_cadastrarLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(painel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_concedente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_concedente)))
                    .addGroup(painel_cadastrarLayout.createSequentialGroup()
                        .addGroup(painel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_siape)
                            .addComponent(txt_siape, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(painel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_admissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_admissao)
                            .addComponent(lbl_tempocontrato)
                            .addComponent(txt_tempocontrato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(painel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_area, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(painel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_departamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbl_departamento)
                                .addComponent(txt_area, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(32, 32, 32)
                .addGroup(painel_cadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_cadastrar)
                    .addComponent(btn_cancelar))
                .addGap(249, 249, 249))
        );

        jTabbedPane1.addTab("Cadastrar", painel_cadastrar);

        table_privado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Nome", "Sobrenome", "Código", "Cpf", "Setor", "Concedente", "Tempo Contrato", "Area"
            }
        ));
        jScrollPane1.setViewportView(table_privado);

        lbl_buscar_fp.setText("Código:");

        txt_buscar_fp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_buscar_fpActionPerformed(evt);
            }
        });

        btn_buscar_fp.setText("Consultar");
        btn_buscar_fp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscar_fpActionPerformed(evt);
            }
        });

        btn_apagar_fp.setText("Apagar");
        btn_apagar_fp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_apagar_fpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painel_func_privadoLayout = new javax.swing.GroupLayout(painel_func_privado);
        painel_func_privado.setLayout(painel_func_privadoLayout);
        painel_func_privadoLayout.setHorizontalGroup(
            painel_func_privadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_func_privadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel_func_privadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE)
                    .addGroup(painel_func_privadoLayout.createSequentialGroup()
                        .addComponent(lbl_buscar_fp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_buscar_fp, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_buscar_fp)
                        .addGap(31, 31, 31)
                        .addComponent(btn_apagar_fp)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        painel_func_privadoLayout.setVerticalGroup(
            painel_func_privadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_func_privadoLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painel_func_privadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_buscar_fp)
                    .addComponent(btn_buscar_fp)
                    .addComponent(txt_buscar_fp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_apagar_fp))
                .addContainerGap(233, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Quadro Privado", painel_func_privado);

        table_publico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Nome", "Sobrenome", "Código", "Cpf", "Setor", "Siape", "Ano Admissão", "Departamento"
            }
        ));
        jScrollPane2.setViewportView(table_publico);

        lbl_buscar_fpu.setText("Código:");

        txt_buscar_fpu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_buscar_fpuActionPerformed(evt);
            }
        });

        btn_buscar_fpu.setText("Consultar");
        btn_buscar_fpu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscar_fpuActionPerformed(evt);
            }
        });

        btn_apagar_fpu.setText("Apagar");
        btn_apagar_fpu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_apagar_fpuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painel_func_publicoLayout = new javax.swing.GroupLayout(painel_func_publico);
        painel_func_publico.setLayout(painel_func_publicoLayout);
        painel_func_publicoLayout.setHorizontalGroup(
            painel_func_publicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_func_publicoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel_func_publicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE)
                    .addGroup(painel_func_publicoLayout.createSequentialGroup()
                        .addComponent(lbl_buscar_fpu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_buscar_fpu, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_buscar_fpu)
                        .addGap(31, 31, 31)
                        .addComponent(btn_apagar_fpu)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        painel_func_publicoLayout.setVerticalGroup(
            painel_func_publicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_func_publicoLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painel_func_publicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_buscar_fpu)
                    .addComponent(btn_buscar_fpu)
                    .addComponent(txt_buscar_fpu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_apagar_fpu))
                .addGap(0, 233, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Quadro Público", painel_func_publico);

        table_funcionarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Nome", "Sobrenome", "Código", "Cpf", "Setor", "Quadro"
            }
        ));
        jScrollPane3.setViewportView(table_funcionarios);

        btn_buscar_f.setText("Consultar");

        txt_buscar_f.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_buscar_fActionPerformed(evt);
            }
        });

        btn_apagar_f.setText("Apagar");
        btn_apagar_f.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_apagar_fActionPerformed(evt);
            }
        });

        lbl_buscar_f.setText("Código:");

        javax.swing.GroupLayout painel_funcionariosLayout = new javax.swing.GroupLayout(painel_funcionarios);
        painel_funcionarios.setLayout(painel_funcionariosLayout);
        painel_funcionariosLayout.setHorizontalGroup(
            painel_funcionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_funcionariosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painel_funcionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE)
                    .addGroup(painel_funcionariosLayout.createSequentialGroup()
                        .addComponent(lbl_buscar_f)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_buscar_f, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_buscar_f)
                        .addGap(31, 31, 31)
                        .addComponent(btn_apagar_f)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        painel_funcionariosLayout.setVerticalGroup(
            painel_funcionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_funcionariosLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painel_funcionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_buscar_f)
                    .addComponent(btn_buscar_f)
                    .addComponent(txt_buscar_f, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_apagar_f))
                .addGap(0, 233, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Todos Funcionários", painel_funcionarios);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void radioBtn_quadroPublicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtn_quadroPublicoActionPerformed
        // TODO add your handling code here:
        if(radioBtn_quadroPublico.isSelected()){
            txt_siape.setEnabled(true);
            txt_admissao.setEnabled(true);
            txt_departamento.setEnabled(true);
            //desativa privado
            txt_concedente.setEnabled(false);
            txt_tempocontrato.setEnabled(false);
            txt_area.setEnabled(false);
        }
        else{
            txt_siape.setEnabled(false);
            txt_admissao.setEnabled(false);
            txt_departamento.setEnabled(false);
        }
    }//GEN-LAST:event_radioBtn_quadroPublicoActionPerformed

    private void txt_tempocontratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_tempocontratoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_tempocontratoActionPerformed

    private void txt_concedenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_concedenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_concedenteActionPerformed

    private void txt_siapeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_siapeActionPerformed
        // TODO add your handling code here:
        
       
       
    }//GEN-LAST:event_txt_siapeActionPerformed

    private void txt_sobrenomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_sobrenomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_sobrenomeActionPerformed

    private void txt_nomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nomeActionPerformed

    private void txt_setorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_setorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_setorActionPerformed

    private void radioBtn_quadroPrivadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioBtn_quadroPrivadoActionPerformed
        // TODO add your handling code here:
        if(radioBtn_quadroPrivado.isSelected()){
            txt_concedente.setEnabled(true);
            txt_tempocontrato.setEnabled(true);
            txt_area.setEnabled(true);
            //desativa publico
            txt_siape.setEnabled(false);
            txt_admissao.setEnabled(false);
            txt_departamento.setEnabled(false);
        }
        else{
            txt_concedente.setEnabled(false);
            txt_tempocontrato.setEnabled(false);
            txt_area.setEnabled(false);
        }
    }//GEN-LAST:event_radioBtn_quadroPrivadoActionPerformed

    private void txt_nascimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nascimentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nascimentoActionPerformed

    private void txt_cpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cpfActionPerformed

    private void txt_departamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_departamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_departamentoActionPerformed

    private void btn_cadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cadastrarActionPerformed
        // TODO add your handling code here:
        int flag = 0;
        
        
        //tratamento 1: botões PUBLICO ou PRIVADO
        try{
            if(
                    (!radioBtn_quadroPrivado.isSelected())&&
                    (!radioBtn_quadroPublico.isSelected())
                    ){
                flag = 1;
                throw new Preencher("erro!");
            }
        }catch(Preencher p){
            Component ERRO = null;
            JOptionPane.showMessageDialog(ERRO, "Defina o quadro [Publico] ou [Privado].");
        }
        
        //tratamento 2: campos vazios
        if(radioBtn_quadroPrivado.isSelected()){
            try{
                if(
                        txt_nome.getText().trim().equals("") ||
                        txt_sobrenome.getText().trim().equals("") ||
                        txt_nascimento.getText().trim().equals("") ||
                        txt_cpf.getText().trim().equals("") ||
                        txt_setor.getText().trim().equals("") ||
                        txt_concedente.getText().trim().equals("") ||
                        txt_tempocontrato.getText().trim().equals("") ||
                        txt_area.getText().trim().equals("")
                        ){
                    flag = 1;
                    throw new Preencher("erro!");
                }
            }catch(Preencher p){
                Component ERRO = null;
                JOptionPane.showMessageDialog(ERRO, "Preencha todos os dados.");
            }    
        }else if(radioBtn_quadroPublico.isSelected()){
            try{
                if(
                        txt_nome.getText().trim().equals("") ||
                        txt_sobrenome.getText().trim().equals("") ||
                        txt_nascimento.getText().trim().equals("") ||
                        txt_cpf.getText().trim().equals("") ||
                        txt_setor.getText().trim().equals("") ||
                        txt_siape.getText().trim().equals("") ||
                        txt_admissao.getText().trim().equals("") ||
                        txt_departamento.getText().trim().equals("")
                        ){
                    flag = 1;
                    throw new Preencher("erro!");
                }
            }catch(Preencher p){
                Component ERRO = null;
                JOptionPane.showMessageDialog(ERRO, "Preencha todos os dados.");              
            }
        }
        //tentar resolver isso caso sobrar tempo
        /*
        //tratamento 3: verifica se usuário já existe no sistema através do CÓDIGO
            boolean flag_aux_code_fp = true;     
            short aux_code_fp;
   
            if(radioBtn_quadroPrivado.isSelected()){
                aux_code_fp = Short.parseShort(txt_nascimento.getText());
                //varre a lista pra encontrar o mesmo codigo
                for(FuncionarioPrivado fp: listaCadastro.ListFuncionarioPrivado){
                    //compara se o codigo existe
                    if(fp.getCode() == Short.parseShort(txt_nascimento.getText())){
                        flag_aux_code_fp = false;
//                        aux_code_fp = Short.parseShort(txt_nascimento.getText());
                    }else{
                        flag_aux_code_fp = true;
                    }
                }
            }
        try{
            if(flag_aux_code_fp == false){
                throw new CodigoExistente("erro!");
            }
        }catch (CodigoExistente e){
            Component ERRO = null;
            JOptionPane.showMessageDialog(ERRO, "Código já existente!");   
        }
          */     
        String nome = txt_nome.getText();
        String sobrenome = txt_sobrenome.getText();
        short code = Short.parseShort(txt_nascimento.getText());
        String cpf = txt_cpf.getText();
        String setor = txt_setor.getText();
        
        //só efetua cadastro mendiante flag zero
        //servidor privado
        if(flag == 0 && radioBtn_quadroPrivado.isSelected()){
            String concedente = txt_concedente.getText();
            String tempoContrato = txt_tempocontrato.getText();
            String area = txt_area.getText();
            //criando o objeto funcionario publico
            FuncionarioPrivado fp = new FuncionarioPrivado(nome, sobrenome, code, cpf, setor, concedente, tempoContrato, area);
            //cadastra na lista fp
            listaCadastro.cadastrarFuncionarioPrivado(fp);
            //chama metodo que mostra lista na tela
            mostrarTableFuncionarioPrivado();
            //chama metodo que popula lista de funcionarios: fp + fpu
            mostrarTableFuncionarios();
        }//servidor publico
        else if (flag == 0 && radioBtn_quadroPublico.isSelected()){
            //strings fpu
            String siape = txt_siape.getText();
            String anoAdmissao = txt_admissao.getText();
            String departamento = txt_departamento.getText();
            //criar objeto fpu
            FuncionarioPublico fpu = new FuncionarioPublico(nome, sobrenome, code, cpf, setor, siape, anoAdmissao, departamento);
            //cadastra na lista fpu
            listaCadastro.cadastrarFuncionarioPublico(fpu);
            //chama funcao que mostra lista na tela
            mostrarTableFuncionarioPublico();
            //chama metodo que popula funcionarios: fp + fpu
            mostrarTableFuncionarios();
        }
        //só zera todos os campos se passar por todos os testes, que indica que o cadastro foi efetuado com sucesso
        if (flag == 0){
            //mensagem na tela de ok sucesso
            Component ERRO = null;
            JOptionPane.showMessageDialog(ERRO, "Cadastro efetuado com sucesso.");
            //apos clicar em cadastrar, limpa fields
            txt_nome.setText("");
            txt_sobrenome.setText("");
            txt_nascimento.setText("");
            txt_cpf.setText("");
            txt_setor.setText("");
            txt_concedente.setText("");
            txt_tempocontrato.setText("");
            txt_area.setText("");
            txt_siape.setText("");
            txt_admissao.setText("");
            txt_departamento.setText("");
     //       radioBtn_quadroPrivado.setEnabled(false);
      //      radioBtn_quadroPublico.setEnabled(false);     
       //     buttonGroup1.clearSelection();
        }


       
    }//GEN-LAST:event_btn_cadastrarActionPerformed

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        // TODO add your handling code here:
        txt_nome.setText("");
        txt_sobrenome.setText("");
        txt_nascimento.setText("");
        txt_cpf.setText("");
        txt_setor.setText("");
        txt_concedente.setText("");
        txt_tempocontrato.setText("");
        txt_area.setText("");
        txt_siape.setText("");
        txt_admissao.setText("");
        txt_departamento.setText("");
//        radioBtn_quadroPrivado.setEnabled(false);
//        radioBtn_quadroPublico.setEnabled(false);
//        buttonGroup1.clearSelection();
    }//GEN-LAST:event_btn_cancelarActionPerformed

    private void txt_buscar_fpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_buscar_fpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_buscar_fpActionPerformed

    private void txt_buscar_fpuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_buscar_fpuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_buscar_fpuActionPerformed

    private void txt_buscar_fActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_buscar_fActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_buscar_fActionPerformed

    private void btn_buscar_fpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscar_fpActionPerformed
        // TODO add your handling code here:
        //declaracao da var pra receber a busca
        boolean flagCode_fp = false;        
        short flagTxtCode_fp;

        //recebendo o campo digitado
        flagTxtCode_fp = Short.parseShort(txt_buscar_fp.getText());
        //varrendo a lista
        for(FuncionarioPrivado fp: listaCadastro.ListFuncionarioPrivado){
            //comparando se é cpf de busca
            if (fp.getCode() == Short.parseShort(txt_buscar_fp.getText())){
                flagCode_fp = true;
                //busca atual
                flagTxtCode_fp = Short.parseShort(txt_buscar_fp.getText());
                //mensagem de confirmação
           //     Component ERRO = null;
           //     JOptionPane.showMessageDialog(ERRO, "CPF encontrado!");  
            }
        }
        //verifica se for verdade a flag
        if(flagCode_fp){
            //procura na tabela onde está o cpf
            for (int i = 0; i< table_privado.getRowCount(); ++i){
                //testa se é o cpf
                if(flagTxtCode_fp == (short)table_privado.getValueAt(i, 2)){
                    table_privado.setRowSelectionInterval(i,i);
                    break; //interrompe pq achou onde tá a linha
                }
            }
        }
        try{
            //se for falso significa que o cpf não existe
            if(flagCode_fp == false){
                throw new FuncionarioNaoEncontrado("erro");
            }
        }catch(FuncionarioNaoEncontrado e){
            Component ERRO = null;
            JOptionPane.showMessageDialog(ERRO, "Código não encontrado!");
        }

        try{
            if(listaCadastro.totalFuncionarioPrivado()== 0){
                throw new SemCadastros("erro");
            }
        }catch(SemCadastros e){
            Component ERRO = null;
            JOptionPane.showMessageDialog(ERRO, "Não há cadastros no sistema!");              
        }
    }//GEN-LAST:event_btn_buscar_fpActionPerformed

    private void btn_apagar_fpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_apagar_fpActionPerformed
        // TODO add your handling code here:
        //possível try catch pra selecionar a linha antes de clicar em apagar
        int index = table_privado.getSelectedRow();
        if(index >= 0 && index<listaCadastro.totalFuncionarioPrivado()){
            listaCadastro.ListFuncionarioPrivado.remove(index);
        }
        mostrarTableFuncionarioPrivado();
    }//GEN-LAST:event_btn_apagar_fpActionPerformed

    private void btn_apagar_fpuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_apagar_fpuActionPerformed
        // TODO add your handling code here:
        int index = table_publico.getSelectedRow();
        if(index >= 0 && index<listaCadastro.totalFuncionarioPublico()){
            listaCadastro.ListFuncionarioPublico.remove(index);
        }
        mostrarTableFuncionarioPublico();
    }//GEN-LAST:event_btn_apagar_fpuActionPerformed

    private void btn_apagar_fActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_apagar_fActionPerformed
        // TODO add your handling code here:
        int index = table_funcionarios.getSelectedRow();
        if(index >= 0 && index<listaCadastro.totalFuncionarioPublico()){
            listaCadastro.ListFuncionarioPublico.remove(index);
        }
        if(index >= 0 && index<listaCadastro.totalFuncionarioPrivado()){
            listaCadastro.ListFuncionarioPrivado.remove(index);
        }
        mostrarTableFuncionarios();
    }//GEN-LAST:event_btn_apagar_fActionPerformed

    private void btn_buscar_fpuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscar_fpuActionPerformed
        // TODO add your handling code here:
        //declaracao da var pra receber a busca
        boolean flagCode_fpu = false;        
        short flagTxtCode_fpu;

        //recebendo o campo digitado
        flagTxtCode_fpu = Short.parseShort(txt_buscar_fpu.getText());
        //varrendo a lista
        for(FuncionarioPublico fpu: listaCadastro.ListFuncionarioPublico){
            //comparando se é cpf de busca
            if (fpu.getCode() == Short.parseShort(txt_buscar_fpu.getText())){
                flagCode_fpu = true;
                //busca atual
                flagTxtCode_fpu = Short.parseShort(txt_buscar_fpu.getText());
                //mensagem de confirmação
           //     Component ERRO = null;
           //     JOptionPane.showMessageDialog(ERRO, "CPF encontrado!");  
            }
        }
        //verifica se for verdade a flag
        if(flagCode_fpu){
            //procura na tabela onde está o cpf
            for (int i = 0; i< table_publico.getRowCount(); ++i){
                //testa se é o cpf
                if(flagTxtCode_fpu == (short)table_publico.getValueAt(i, 2)){
                    table_publico.setRowSelectionInterval(i,i);
                    break; //interrompe pq achou onde tá a linha
                }
            }
        }
        try{
            //se for falso significa que o cpf não existe
            if(flagCode_fpu == false){
                throw new FuncionarioNaoEncontrado("erro");
            }
        }catch(FuncionarioNaoEncontrado e){
            Component ERRO = null;
            JOptionPane.showMessageDialog(ERRO, "Código não encontrado!");
        }

        try{
            if(listaCadastro.totalFuncionarioPrivado()== 0){
                throw new SemCadastros("erro");
            }
        }catch(SemCadastros e){
            Component ERRO = null;
            JOptionPane.showMessageDialog(ERRO, "Não há cadastros no sistema!");              
        }
    }//GEN-LAST:event_btn_buscar_fpuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cadastroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cadastroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cadastroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cadastroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cadastroFuncionario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_apagar_f;
    private javax.swing.JButton btn_apagar_fp;
    private javax.swing.JButton btn_apagar_fpu;
    private javax.swing.JButton btn_buscar_f;
    private javax.swing.JButton btn_buscar_fp;
    private javax.swing.JButton btn_buscar_fpu;
    private javax.swing.JButton btn_cadastrar;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbl_admissao;
    private javax.swing.JLabel lbl_area;
    private javax.swing.JLabel lbl_buscar_f;
    private javax.swing.JLabel lbl_buscar_fp;
    private javax.swing.JLabel lbl_buscar_fpu;
    private javax.swing.JLabel lbl_concedente;
    private javax.swing.JLabel lbl_cpf;
    private javax.swing.JLabel lbl_departamento;
    private javax.swing.JLabel lbl_nascimento;
    private javax.swing.JLabel lbl_nome;
    private javax.swing.JLabel lbl_setor;
    private javax.swing.JLabel lbl_siape;
    private javax.swing.JLabel lbl_sobrenome;
    private javax.swing.JLabel lbl_tempocontrato;
    private javax.swing.JPanel painel_cadastrar;
    private javax.swing.JPanel painel_func_privado;
    private javax.swing.JPanel painel_func_publico;
    private javax.swing.JPanel painel_funcionarios;
    private javax.swing.JRadioButton radioBtn_quadroPrivado;
    private javax.swing.JRadioButton radioBtn_quadroPublico;
    private javax.swing.JTable table_funcionarios;
    private javax.swing.JTable table_privado;
    private javax.swing.JTable table_publico;
    private javax.swing.JTextField txt_admissao;
    private javax.swing.JTextField txt_area;
    private javax.swing.JTextField txt_buscar_f;
    private javax.swing.JTextField txt_buscar_fp;
    private javax.swing.JTextField txt_buscar_fpu;
    private javax.swing.JTextField txt_concedente;
    private javax.swing.JTextField txt_cpf;
    private javax.swing.JTextField txt_departamento;
    private javax.swing.JTextField txt_nascimento;
    private javax.swing.JTextField txt_nome;
    private javax.swing.JTextField txt_setor;
    private javax.swing.JTextField txt_siape;
    private javax.swing.JTextField txt_sobrenome;
    private javax.swing.JTextField txt_tempocontrato;
    // End of variables declaration//GEN-END:variables
}
